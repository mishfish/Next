<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class NextNews extends \AppBundle\Entity\NextNews implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'Id', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'creationDate', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'caption', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'relativeUrl', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'avatarUrl', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'imageFile', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'ImageUpdateTime', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'announce', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'textFull', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'author', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'categorieId'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'Id', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'creationDate', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'caption', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'relativeUrl', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'avatarUrl', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'imageFile', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'ImageUpdateTime', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'announce', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'textFull', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'author', '' . "\0" . 'AppBundle\\Entity\\NextNews' . "\0" . 'categorieId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (NextNews $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCaption($caption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaption', [$caption]);

        return parent::setCaption($caption);
    }

    /**
     * {@inheritDoc}
     */
    public function getCaption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaption', []);

        return parent::getCaption();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelativeUrl($relativeUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelativeUrl', [$relativeUrl]);

        return parent::setRelativeUrl($relativeUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelativeUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelativeUrl', []);

        return parent::getRelativeUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnounce($announce)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnounce', [$announce]);

        return parent::setAnnounce($announce);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnounce()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnounce', []);

        return parent::getAnnounce();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextFull($textFull)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextFull', [$textFull]);

        return parent::setTextFull($textFull);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextFull()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextFull', []);

        return parent::getTextFull();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorieId($categorieId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorieId', [$categorieId]);

        return parent::setCategorieId($categorieId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorieId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorieId', []);

        return parent::getCategorieId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatarUrl($avatarUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatarUrl', [$avatarUrl]);

        return parent::setAvatarUrl($avatarUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatarUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatarUrl', []);

        return parent::getAvatarUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageFile(\Symfony\Component\HttpFoundation\File\File $avatarUrl = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageFile', [$avatarUrl]);

        return parent::setImageFile($avatarUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageFile', []);

        return parent::getImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getImageUpdateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageUpdateTime', []);

        return parent::getImageUpdateTime();
    }

}
